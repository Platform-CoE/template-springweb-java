name: Deploy to Kubernetes via ArgoCD with Kustomize

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prd

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v2
        with:
          version: 'v1.26.0'

      - name: Install Kustomize
        run: |
          sudo apt-get install -y kustomize

      - name: Login to ArgoCD
        run: |
          argocd login ${{ secrets.ARGOCD_IP }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure

      - name: Check if ArgoCD app exists
        id: check_app
        run: |
          if argocd app get ${{ secrets.ARGOCD_IP }}; then
            echo "app_exists=true" >> $GITHUB_ENV
          else
            echo "app_exists=false" >> $GITHUB_ENV
          fi

      - name: Create or Update ArgoCD Application
        run: |
          if [ "${{ env.app_exists }}" = "true" ]; then
            argocd app set ${{ secrets.ARGOCD_APP_NAME }} \
              --repo https://github.com/${{ github.repository }} \
              --path manifests/overlays/${{ github.event.inputs.environment }} \
              --sync-policy automated
          else
            argocd app create ${{ secrets.ARGOCD_APP_NAME }} \
              --repo https://github.com/${{ github.repository }} \
              --path manifests/overlays/${{ github.event.inputs.environment }} \
              --dest-server https://kubernetes.default.svc \
              --dest-namespace default \
              --sync-policy automated
          fi

      - name: ArgoCD Sync Application
        run: |
          argocd app sync ${{ secrets.ARGOCD_APP_NAME }}
